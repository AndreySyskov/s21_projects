version: "3.8"                  # версия docker compose
services:                       # блок, описывающий каждый отдельный сервис
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports: 
      - "5672:5672"
      - "15672:15672"

  db:
    image: postgres:15  # Выберите необходимую версию PostgreSQL
    
    #restart: always
    networks:
      - app-network
    environment:
      POSTGRES_USER: postgres  # Имя пользователя, созданного при первом запуске
      POSTGRES_PASSWORD: password  # Пароль пользователя, созданного при первом запуске
      POSTGRES_DB: postgres  # Имя базы данных
    volumes:
      - ./services/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data  # Точка монтирования для хранения данных на хосте
    ports:
      - "5432:5432"
  
  booking-service:
    build: ./services/booking-service/
    networks:
      - app-network
    ports:
      - "8083:8083"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: postgres
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
      HOTEL_SERVICE_HOST: hotel-service
      HOTEL_SERVICE_PORT: 8082
      PAYMENT_SERVICE_HOST: payment-service
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyalty-service
      LOYALTY_SERVICE_PORT: 8085
    depends_on:
      - db
      - rabbitmq
      - hotel-service
      - loyalty-service
      - payment-service

  session-service:
    build: ./services/session-service/
    networks:
      - app-network
    ports:
      - "8081:8081"
    environment:
      POSTGRES_HOST: bd
      POSTGRES_PORT: 5432
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: users_db
    depends_on:
      - db
     
  hotel-service:
    build: ./services/hotel-service/
    networks:
      - app-network
    ports:
      - "8082:8082"
    environment:
      POSTGRES_HOST: bd
      POSTGRES_PORT: 5432
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: hotels_db
    depends_on:
      - db
      
  payment-service:
    build: ./services/payment-service/
    networks:
      - app-network
    ports:
      - "8084:8084"
    environment:
      POSTGRES_HOST: bd
      POSTGRES_PORT: 5432
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: payment_db
    depends_on:
      - db
     
  loyalty-service:
    build: ./services/loyalty-service/
    networks:
      - app-network
    ports:
      - "8085:8085"
    environment:
      POSTGRES_HOST: bd
      POSTGRES_PORT: 5432
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: balances_db
    depends_on:
      - db
      
  report-service:
    build: ./services/report-service/
    networks:
      - app-network
    ports:
      - "8086:8086"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: statistics_db
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
    depends_on:
      - db
      - rabbitmq
  gateway-service:
    build: ./services/gateway-service/
    networks:
      - app-network
    ports:
      - "8087:8087"
    environment:
      SESSION_SERVICE_HOST: session-service
      SESSION_SERVICE_PORT: 8081
      HOTEL_SERVICE_HOST: hotel-service
      HOTEL_SERVICE_PORT: 8082
      BOOKING_SERVICE_HOST: booking-service
      BOOKING_SERVICE_PORT: 8083
      PAYMENT_SERVICE_HOST: payment-service
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyalty-service
      LOYALTY_SERVICE_PORT: 8085
      REPORT_SERVICE_HOST: report-service
      REPORT_SERVICE_PORT: 8086
    depends_on:
      - booking-service
      - hotel-service
      - session-service
      - payment-service
      - loyalty-service
      - report-service




# Пользовательская сеть
networks:
  app-network:
    driver: bridge

volumes:
  pg_data:


