
on:
  push:
    branches: [ "DO5_Part_04" ]

jobs:
  test_:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
 
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: |
          npm install -g newman

      - name: Create and Run Image
        working-directory: DO5_SimpleDocker-1-develop/src/04/
        run: |
          docker build -t miniserver:1.0 .
          docker run -dt -p 80:81 miniserver:1.0 

   #   - name: Docker_pull
   #     run: docker pull nginx

   #   - name: Docker_images
   #     run: docker images

   #   - name: Start_docker_image_nginx
   #     run: docker run -d nginx

    #  - name: Docker_inspect_and_stop
    #    run: |
    #      output=$(docker ps -q)
    #      docker inspect $output
    #      docker stop $output
    #      if docker ps -q | grep $output; then
    #        echo "Container in use. Exiting with error."
    #        exit 1
    #      else
    #        echo "OK"
    #      fi

    #  - name: Check if port 80 is in use
   #     run: |
    #      if fuser -k 80/tcp; then
    #        echo "Port 80 is in use. Exiting with error."
    #        exit 1
    #      else
    #        echo "Port 80 is not in use."
    #      fi

    #  - name: Docker_with_ports  
   #     run: | 
    #      docker run -d -p 80:80 -p 443:443 nginx
         # docker ps -q 

    #  - name: Postman_test
    #    working-directory: DO5_SimpleDocker-1-develop/src/01/
    #    run: newman run postman_test.json

    #  - name: Docker exec
    #    run: docker exec $(docker ps -q) cat /etc/nginx/nginx.conf

     # - name: Copy nginx configuration
       # working-directory: DO5_SimpleDocker-1-develop/src/02/
      #  run: |
      #    pwd
      #    cd DO5_SimpleDocker-1-develop/src/02/
      #    docker cp nginx.conf $(docker ps -q):/etc/nginx/nginx.conf
      #    docker exec $(docker ps -q) nginx -s reload
      #    sleep 5

     # - name: Postman_test_of_status_page
     #   run: |
     #     cd DO5_SimpleDocker-1-develop/src/02/
     #     newman run postman_test_of_status_page.json

     # - name: Save_container_and_restart_after_delete_image
     #   run: |
     #     cd DO5_SimpleDocker-1-develop/src/02/
     #     pwd
     #     docker export -o container.tar $(docker ps -q)
     #     ls -la
     #     docker stop $(docker ps -q)
     #     docker rmi -f nginx:latest
     #     docker ps -qa
     #     docker import container.tar nginx:latest
     #     docker run -d -p 80:80 nginx nginx -g "daemon off;"
          
      - name: Postman_test_of_status_page
        run: |
          cd DO5_SimpleDocker-1-develop/src/04/
          newman run Test_part_04.json

